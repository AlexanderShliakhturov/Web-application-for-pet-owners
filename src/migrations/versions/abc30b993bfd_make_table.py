"""make_table

Revision ID: abc30b993bfd
Revises: 
Create Date: 2024-11-25 00:21:57.982477

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "abc30b993bfd"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("mail", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("birth", sa.DateTime(), nullable=True),
        sa.Column("sex", sa.String(), nullable=True),
        sa.Column("tabel_number", sa.Integer(), nullable=True),
        sa.Column("segment", sa.String(), nullable=True),
        sa.Column("function", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "passwords",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("login", sa.String(), nullable=True),
        sa.Column("password_hash", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "pets",
        sa.Column("pet_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("sex", sa.String(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("animal", sa.String(), nullable=True),
        sa.Column("breed", sa.String(), nullable=True),
        sa.Column("birth", sa.DateTime(), nullable=True),
        sa.Column("weight", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("pet_id"),
    )
    op.create_table(
        "promos",
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column(
            "promo_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("activated_on", sa.DateTime(), nullable=True),
        sa.Column("valid_from", sa.DateTime(), nullable=True),
        sa.Column("valid_to", sa.DateTime(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("promo", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("promo_id"),
    )
    op.create_table(
        "statuses",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status_type", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "pets_diseases",
        sa.Column(
            "incident_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("pet_id", sa.Integer(), nullable=True),
        sa.Column("disease_id", sa.Integer(), nullable=True),
        sa.Column("disease_name", sa.String(), nullable=True),
        sa.Column("disease_danger", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pet_id"],
            ["pets.pet_id"],
        ),
        sa.PrimaryKeyConstraint("incident_id"),
    )
    op.create_table(
        "pets_feeds",
        sa.Column("pet_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("feed_id", sa.Integer(), nullable=True),
        sa.Column("feed_type", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pet_id"],
            ["pets.pet_id"],
        ),
        sa.PrimaryKeyConstraint("pet_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("pets_feeds")
    op.drop_table("pets_diseases")
    op.drop_table("statuses")
    op.drop_table("promos")
    op.drop_table("pets")
    op.drop_table("passwords")
    op.drop_table("users")
    # ### end Alembic commands ###
